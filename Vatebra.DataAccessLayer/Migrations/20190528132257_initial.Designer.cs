// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vatebra.DataAccessLayer.Dbcontext;

namespace Vatebra.DataAccessLayer.Migrations
{
    [DbContext(typeof(VatebraDbContext))]
    [Migration("20190528132257_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BookCopies", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bookAbstract");

                    b.Property<int?>("bookId");

                    b.Property<DateTime>("dateCreated");

                    b.Property<DateTime>("dateModified");

                    b.Property<string>("description");

                    b.Property<bool>("isActive");

                    b.Property<string>("versionTitle");

                    b.Property<string>("yearPublished");

                    b.HasKey("id");

                    b.HasIndex("bookId");

                    b.ToTable("BoBookCopiesks");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BookSubscriptionDetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description");

                    b.Property<int?>("bookId");

                    b.Property<DateTime>("dateCreated");

                    b.Property<DateTime>("dateModified");

                    b.Property<bool>("isActive");

                    b.Property<string>("isfree");

                    b.HasKey("id");

                    b.HasIndex("bookId");

                    b.ToTable("BookSubscriptionDetails");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.Books", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookAuthor");

                    b.Property<string>("bookName");

                    b.Property<string>("bookTitle");

                    b.Property<DateTime>("dateCreated");

                    b.Property<DateTime>("dateModified");

                    b.Property<bool>("isActive");

                    b.HasKey("id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BooksBorrowed", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovedById");

                    b.Property<int?>("bookId");

                    b.Property<string>("comments");

                    b.Property<DateTime>("dateBorrowed");

                    b.Property<DateTime>("dateCreated");

                    b.Property<DateTime>("dateModified");

                    b.Property<DateTime>("dueReturnedDate");

                    b.Property<bool>("isActive");

                    b.HasKey("id");

                    b.HasIndex("bookId");

                    b.ToTable("BooksBorrowed");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BookCopies", b =>
                {
                    b.HasOne("Vatebra.DataAccessLayer.Entities.Books", "Books")
                        .WithMany("bookCopies")
                        .HasForeignKey("bookId");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BookSubscriptionDetails", b =>
                {
                    b.HasOne("Vatebra.DataAccessLayer.Entities.Books", "Books")
                        .WithMany("BookSubscrBookSubscriptionDetailsiptions")
                        .HasForeignKey("bookId");
                });

            modelBuilder.Entity("Vatebra.DataAccessLayer.Entities.BooksBorrowed", b =>
                {
                    b.HasOne("Vatebra.DataAccessLayer.Entities.Books", "books")
                        .WithMany()
                        .HasForeignKey("bookId");
                });
#pragma warning restore 612, 618
        }
    }
}
